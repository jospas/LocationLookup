service: locationlookup

provider:
  name: aws
  region: ${opt:region, 'ap-southeast-2'}
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  profile: ${opt:profile, 'aws-josh'}

package:
  individually: true 

functions:

  locationlookup:
    handler: lambda/LocationLookup.handler
    name: '${self:provider.stage}-${self:service}-locationlookup'
    description: 'Loads geographic location for an address'
    role: !GetAtt LambdaRole.Arn
    package:
      exclude:
        - '**'
      include:
        - 'lambda/LocationLookup.js'
        - 'node_modules/**'
    memorySize: 128
    timeout: 7
    environment:
      GOOGLE_API_KEY: 'ChangeMe'

resources:
  Description: 'Demonstration loading geographic locations from an address'
  Resources:
    LambdaRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: !Join [ '-', [ '${self:provider.stage}', !Ref 'AWS::StackName', !Ref 'AWS::Region', 'role' ]]
        AssumeRolePolicyDocument: 
          Version: '2012-10-17'
          Statement: 
            - Effect: 'Allow'
              Principal: 
                Service: 
                  - 'lambda.amazonaws.com'
              Action: 
                - 'sts:AssumeRole'
        ManagedPolicyArns:
          - !Ref LambdaPolicy 

    LambdaPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        ManagedPolicyName: !Join [ '-', [ '${self:provider.stage}', !Ref 'AWS::StackName', !Ref 'AWS::Region', 'policy' ]]
        Description: 'Managed policy for lambda execution'
        PolicyDocument: 
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: 
                - !Join [ ':', [ 'arn:aws:logs', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'log-group:/aws/lambda/*:*:*' ] ]